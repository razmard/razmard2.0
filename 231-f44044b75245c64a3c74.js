"use strict";(self.webpackChunkrazmard=self.webpackChunkrazmard||[]).push([[231],{3610:function(n,e,r){r.r(e),r.d(e,{createIntersectionObserver:function(){return i}});var t,c=new WeakMap,o=navigator.connection||navigator.mozConnection||navigator.webkitConnection;function i(n){return"IntersectionObserver"in window?(t||(t=new IntersectionObserver((function(n){n.forEach((function(n){var e;n.isIntersecting&&(null==(e=c.get(n.target))||e(),c.delete(n.target))}))}),{rootMargin:"4g"!==(null==o?void 0:o.effectiveType)||null!=o&&o.saveData?"2500px":"1250px"})),function(e){return e.current&&(c.set(e.current,n),t.observe(e.current)),function(){t&&e.current&&(c.delete(e.current),t.unobserve(e.current))}}):function(){return n(),function(){}}}}}]);
//# sourceMappingURL=231-f44044b75245c64a3c74.js.map